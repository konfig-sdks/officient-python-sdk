# coding: utf-8
"""
    Officient API

    Officient offers an intuitive HRIS which helps manage all personnel administration through our HR platform & personalized employee self-services. Manage payroll, company assets, contracts, days off, fleet, performance reviews and all employee data in one HR system. HR deserves great software and we're here to provide it.  We support our customers in transforming HR towards paperless administration and automating tedious workforce management tasks in the process. Our goal? Transform HR from an administrative, processing role, to a controlling role which fuels HR strategy across the organization.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from officient_python_sdk.client_custom import ClientCustom
from officient_python_sdk.configuration import Configuration
from officient_python_sdk.api_client import ApiClient
from officient_python_sdk.type_util import copy_signature
from officient_python_sdk.apis.tags.account_api import AccountApi
from officient_python_sdk.apis.tags.asset_api import AssetApi
from officient_python_sdk.apis.tags.authentication_api import AuthenticationApi
from officient_python_sdk.apis.tags.budget_api import BudgetApi
from officient_python_sdk.apis.tags.calendar_request_api import CalendarRequestApi
from officient_python_sdk.apis.tags.calendar_state_api import CalendarStateApi
from officient_python_sdk.apis.tags.component_api import ComponentApi
from officient_python_sdk.apis.tags.contract_api import ContractApi
from officient_python_sdk.apis.tags.cost_center_api import CostCenterApi
from officient_python_sdk.apis.tags.cost_unit_api import CostUnitApi
from officient_python_sdk.apis.tags.custom_event_type_api import CustomEventTypeApi
from officient_python_sdk.apis.tags.custom_field_api import CustomFieldApi
from officient_python_sdk.apis.tags.department_api import DepartmentApi
from officient_python_sdk.apis.tags.document_api import DocumentApi
from officient_python_sdk.apis.tags.expense_api import ExpenseApi
from officient_python_sdk.apis.tags.function_api import FunctionApi
from officient_python_sdk.apis.tags.invitation_api import InvitationApi
from officient_python_sdk.apis.tags.person_api import PersonApi
from officient_python_sdk.apis.tags.priority_scheme_api import PrioritySchemeApi
from officient_python_sdk.apis.tags.team_api import TeamApi
from officient_python_sdk.apis.tags.vehicle_api import VehicleApi
from officient_python_sdk.apis.tags.webhook_api import WebhookApi



class Officient(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.account: AccountApi = AccountApi(api_client)
        self.asset: AssetApi = AssetApi(api_client)
        self.authentication: AuthenticationApi = AuthenticationApi(api_client)
        self.budget: BudgetApi = BudgetApi(api_client)
        self.calendar_request: CalendarRequestApi = CalendarRequestApi(api_client)
        self.calendar_state: CalendarStateApi = CalendarStateApi(api_client)
        self.component: ComponentApi = ComponentApi(api_client)
        self.contract: ContractApi = ContractApi(api_client)
        self.cost_center: CostCenterApi = CostCenterApi(api_client)
        self.cost_unit: CostUnitApi = CostUnitApi(api_client)
        self.custom_event_type: CustomEventTypeApi = CustomEventTypeApi(api_client)
        self.custom_field: CustomFieldApi = CustomFieldApi(api_client)
        self.department: DepartmentApi = DepartmentApi(api_client)
        self.document: DocumentApi = DocumentApi(api_client)
        self.expense: ExpenseApi = ExpenseApi(api_client)
        self.function: FunctionApi = FunctionApi(api_client)
        self.invitation: InvitationApi = InvitationApi(api_client)
        self.person: PersonApi = PersonApi(api_client)
        self.priority_scheme: PrioritySchemeApi = PrioritySchemeApi(api_client)
        self.team: TeamApi = TeamApi(api_client)
        self.vehicle: VehicleApi = VehicleApi(api_client)
        self.webhook: WebhookApi = WebhookApi(api_client)
